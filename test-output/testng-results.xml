<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="20" passed="18" failed="2" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Full discount is applicable]]>
    </line>
    <line>
      <![CDATA[Discount applied on Monthly pass]]>
    </line>
    <line>
      <![CDATA[% Discount coupon is working fine]]>
    </line>
    <line>
      <![CDATA[Cash discount Coupon is working fine]]>
    </line>
    <line>
      <![CDATA[100% discount is applicable on all TB passes]]>
    </line>
    <line>
      <![CDATA[Min Value validated for all TB passes]]>
    </line>
    <line>
      <![CDATA[Use limit is applied]]>
    </line>
  </reporter-output>
  <suite started-at="2022-04-04T17:52:31 IST" name="API Automation testing" finished-at="2022-04-04T17:55:03 IST" duration-ms="151734">
    <groups>
    </groups>
    <test started-at="2022-04-04T17:52:31 IST" name="Test" finished-at="2022-04-04T17:55:03 IST" duration-ms="151734">
      <class name="coupons.TbSelectCoupons">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:coupons.TbSelectCoupons@702b8b12]" started-at="2022-04-04T17:52:31 IST" name="beforeClass" finished-at="2022-04-04T17:52:32 IST" duration-ms="1006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="getProductId()[pri:1, instance:coupons.TbSelectCoupons@702b8b12]" started-at="2022-04-04T17:52:32 IST" name="getProductId" finished-at="2022-04-04T17:52:39 IST" duration-ms="7208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProductId -->
        <test-method signature="checkUseLimit()[pri:2, instance:coupons.TbSelectCoupons@702b8b12]" started-at="2022-04-04T17:52:39 IST" name="checkUseLimit" finished-at="2022-04-04T17:52:59 IST" duration-ms="19932" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkUseLimit -->
        <test-method signature="checkPercentDiscountCoupon()[pri:3, instance:coupons.TbSelectCoupons@702b8b12]" started-at="2022-04-04T17:52:59 IST" name="checkPercentDiscountCoupon" finished-at="2022-04-04T17:53:20 IST" duration-ms="20249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPercentDiscountCoupon -->
        <test-method signature="checkCashDiscountCoupon()[pri:4, instance:coupons.TbSelectCoupons@702b8b12]" started-at="2022-04-04T17:53:20 IST" name="checkCashDiscountCoupon" finished-at="2022-04-04T17:53:40 IST" duration-ms="20253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCashDiscountCoupon -->
        <test-method signature="fullDiscountCoupon()[pri:5, instance:coupons.TbSelectCoupons@702b8b12]" started-at="2022-04-04T17:53:40 IST" name="fullDiscountCoupon" finished-at="2022-04-04T17:53:58 IST" duration-ms="17641" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Full discount is applicable]]>
            </line>
          </reporter-output>
        </test-method> <!-- fullDiscountCoupon -->
        <test-method signature="checkGlobalOrDynamicCoupon()[pri:6, instance:coupons.TbSelectCoupons@702b8b12]" started-at="2022-04-04T17:53:58 IST" name="checkGlobalOrDynamicCoupon" finished-at="2022-04-04T17:54:58 IST" duration-ms="60331" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
623ab87c7e911983460c1ffb expected [1799] but found [1260],
623f1ef7f88870597a27f033 expected [399] but found [314],
623d8994950b49ad99a3c703 expected [399] but found [314]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
623ab87c7e911983460c1ffb expected [1799] but found [1260],
623f1ef7f88870597a27f033 expected [399] but found [314],
623d8994950b49ad99a3c703 expected [399] but found [314]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at coupons.TbSelectCoupons.checkGlobalOrDynamicCoupon(TbSelectCoupons.java:273)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkGlobalOrDynamicCoupon -->
      </class> <!-- coupons.TbSelectCoupons -->
      <class name="courses.SkillAcademy">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:courses.SkillAcademy@6c130c45]" started-at="2022-04-04T17:55:00 IST" name="beforeClass" finished-at="2022-04-04T17:55:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="getProductId()[pri:1, instance:courses.SkillAcademy@6c130c45]" started-at="2022-04-04T17:55:00 IST" name="getProductId" finished-at="2022-04-04T17:55:01 IST" duration-ms="303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProductId -->
        <test-method signature="checkPaymentPartnerWithEmi()[pri:2, instance:courses.SkillAcademy@6c130c45]" started-at="2022-04-04T17:55:01 IST" name="checkPaymentPartnerWithEmi" finished-at="2022-04-04T17:55:02 IST" duration-ms="792" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at courses.SkillAcademy.checkPaymentPartnerWithEmi(SkillAcademy.java:54)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPaymentPartnerWithEmi -->
      </class> <!-- courses.SkillAcademy -->
      <class name="scholarship_tests.TestScholarship">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:scholarship_tests.TestScholarship@50ad3bc1]" started-at="2022-04-04T17:55:02 IST" name="beforeClass" finished-at="2022-04-04T17:55:02 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="getScholarshipTests()[pri:1, instance:scholarship_tests.TestScholarship@50ad3bc1]" started-at="2022-04-04T17:55:02 IST" name="getScholarshipTests" finished-at="2022-04-04T17:55:02 IST" duration-ms="234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getScholarshipTests -->
        <test-method signature="scholarshipTestAvailable()[pri:2, instance:scholarship_tests.TestScholarship@50ad3bc1]" started-at="2022-04-04T17:55:02 IST" name="scholarshipTestAvailable" finished-at="2022-04-04T17:55:02 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scholarshipTestAvailable -->
        <test-method signature="scholarshipTestStatusCode()[pri:3, instance:scholarship_tests.TestScholarship@50ad3bc1]" started-at="2022-04-04T17:55:02 IST" name="scholarshipTestStatusCode" finished-at="2022-04-04T17:55:03 IST" duration-ms="875" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scholarshipTestStatusCode -->
        <test-method signature="scholarshipTestSuccess()[pri:4, instance:scholarship_tests.TestScholarship@50ad3bc1]" started-at="2022-04-04T17:55:03 IST" name="scholarshipTestSuccess" finished-at="2022-04-04T17:55:03 IST" duration-ms="241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scholarshipTestSuccess -->
        <test-method signature="CheckSlugIsNotNull()[pri:5, instance:scholarship_tests.TestScholarship@50ad3bc1]" started-at="2022-04-04T17:55:03 IST" name="CheckSlugIsNotNull" finished-at="2022-04-04T17:55:03 IST" duration-ms="20" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckSlugIsNotNull -->
      </class> <!-- scholarship_tests.TestScholarship -->
      <class name="coupons.TbPassCoupons">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:coupons.TbPassCoupons@6a84a97d]" started-at="2022-04-04T17:54:58 IST" name="beforeClass" finished-at="2022-04-04T17:54:58 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="checkPercentDiscountOnMonthlyPass()[pri:1, instance:coupons.TbPassCoupons@6a84a97d]" started-at="2022-04-04T17:54:58 IST" name="checkPercentDiscountOnMonthlyPass" finished-at="2022-04-04T17:54:58 IST" duration-ms="252" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Discount applied on Monthly pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkPercentDiscountOnMonthlyPass -->
        <test-method signature="checkPercentDiscountCoupon()[pri:2, instance:coupons.TbPassCoupons@6a84a97d]" started-at="2022-04-04T17:54:58 IST" name="checkPercentDiscountCoupon" finished-at="2022-04-04T17:54:58 IST" duration-ms="269" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[% Discount coupon is working fine]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkPercentDiscountCoupon -->
        <test-method signature="cashDiscountCoupon()[pri:3, instance:coupons.TbPassCoupons@6a84a97d]" started-at="2022-04-04T17:54:58 IST" name="cashDiscountCoupon" finished-at="2022-04-04T17:54:59 IST" duration-ms="299" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Cash discount Coupon is working fine]]>
            </line>
          </reporter-output>
        </test-method> <!-- cashDiscountCoupon -->
        <test-method signature="fullDiscountCoupon()[pri:4, instance:coupons.TbPassCoupons@6a84a97d]" started-at="2022-04-04T17:54:59 IST" name="fullDiscountCoupon" finished-at="2022-04-04T17:54:59 IST" duration-ms="290" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[100% discount is applicable on all TB passes]]>
            </line>
          </reporter-output>
        </test-method> <!-- fullDiscountCoupon -->
        <test-method signature="checkMinValue()[pri:5, instance:coupons.TbPassCoupons@6a84a97d]" started-at="2022-04-04T17:54:59 IST" name="checkMinValue" finished-at="2022-04-04T17:54:59 IST" duration-ms="300" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Min Value validated for all TB passes]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkMinValue -->
        <test-method signature="checkUseLimit()[pri:6, instance:coupons.TbPassCoupons@6a84a97d]" started-at="2022-04-04T17:54:59 IST" name="checkUseLimit" finished-at="2022-04-04T17:55:00 IST" duration-ms="317" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Use limit is applied]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkUseLimit -->
        <test-method signature="checkGlobalCoupon()[pri:7, instance:coupons.TbPassCoupons@6a84a97d]" started-at="2022-04-04T17:55:00 IST" name="checkGlobalCoupon" finished-at="2022-04-04T17:55:00 IST" duration-ms="791" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkGlobalCoupon -->
      </class> <!-- coupons.TbPassCoupons -->
    </test> <!-- Test -->
  </suite> <!-- API Automation testing -->
</testng-results>
